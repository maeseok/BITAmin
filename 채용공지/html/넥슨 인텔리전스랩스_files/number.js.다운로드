
Career.Number = {
	/*
	@설  명 : 숫자만 입력
	@반환형 :
	*/
	OnlyNumber : function ()
	{
		if ( ( event.keyCode == 190 || event.keyCode == 110 || event.keyCode == 8 || event.keyCode == 46 ) ||
			( event.keyCode >= 48 && event.keyCode <= 57 ) ||
			( event.keyCode >= 96 && event.keyCode <= 105 ) )
		{
			/*event.returnValue = true;     */
		} else {
			event.returnValue = false;
		}
	},

	/*
	@설  명 : 전달 받은 값의 숫자만 추출
	@반환형 : string
	*/
	GetNumber : function ( val )
	{
		var rtn = '';
		for(var i = 0; i < val.length; i++)
		{
			if ( ( i == 0 && val.charAt(i) == '-' ) || (!isNaN(val.charAt(i)) || val.charAt(i) == '.'  ) )
			{
				rtn += '' + val.charAt(i);
			}
		}
		return rtn;
	},

	/*
	@설  명 : 입력문자열이 모두숫자인지 체크
	@반환형 : boolean
	*/
	IsNumber : function ( str )
	{
		var dotCnt = 0;
		for(var i = 0; i < str.length; i++)
		{
			dotCnt = dotCnt + ( str.charAt(i) == '.' ? 1 : 0 );
			if (isNaN(str.charAt(i)) && dotCnt > 1 )
				return false;
		}
		return true;
	},

	/*
	@설  명 : 수치값을 소수점의 지정한 자릿수로 반올림
	@반환형 :
	@num : 숫자값
	@pos : 반올림처리할 소수점 아래 자릿수
	*/
	Round : function ( num, pos )
	{
		if ( !this.IsNumber(num) )
		{
			return num;
		}
		var str_num = String( num );
		var pt_pos  = str_num.indexOf( "." );
		var out_num = str_num.substring( 0, pt_pos );
		var sub_len = str_num.substr( pt_pos + 1 ).length;
		if ( pos >= sub_len || pos < 1 || pt_pos < 1 )
		{
			return this.FillZero( str_num, pos );
		}
		var sub_num = str_num.substring( pt_pos + 1, pt_pos + pos + 1 );
		var num_rnd = Number( str_num.substring( pt_pos + pos + 1 , pt_pos + pos + 2 ) );
		rnd_str = out_num + "." + sub_num;
		if ( num_rnd >= 5 )
		{
			rnd_str =
				rnd_str.substring( 0, rnd_str.length - 1 ) +
				(eval(rnd_str.substring( rnd_str.length - 1, rnd_str.length )) + 1);
		}
		return this.FillZero(rnd_str, pos );
	},

	/*
	@설  명 : 지정한 수만큼 소수점 아래로 0을 붙인다.
	@반환형 : @num : 숫자값
	@pos : 0을 붙일 소수점 아래 자랫수
	*/
	FillZero : function( num, pos )
	{
		var str_num = String( num );
		var pt_pos  = str_num.indexOf(".");
		var cnt     = 0;
		if ( pt_pos < 1 )
		{
			str_num += ".";
			cnt = pos;
		}
		else
		{
			var sub_len = str_num.substr( pt_pos + 1 ).length;
			if ( pos > sub_len )
			{
				cnt = pos - sub_len;
			}
		}
		var str_0 = "";
		for ( var i = 0 ; i < cnt ; i ++ )
		{
			str_0 += "0";
		}
		return str_num + str_0;
	},

	/*
	@설  명 : 소수점 위의 숫자값에 콤마(,)를 붙임
	@반환형 :
	@num : 숫자값
	@return :
	*/
	Format : function ( num )
	{
		if ( ! this.IsNumber( num ) )
			return num;
		var str_num = String( num );
		var pt_pos  = str_num.indexOf( "." );
		if ( pt_pos < 0 )
		{
			pt_pos = str_num.length;
		}
		var number = this.GetNumber( str_num.substring( 0, pt_pos ) );
		var rtnNum = '';
		var cnt = 1;
		for( var i = (number.length-1); i >= 0 ; i-- )
		{
			rtnNum = number.charAt(i) + rtnNum;
			if ( (cnt % 3) == 0 && i != 0 )
			{
				rtnNum = ','+ rtnNum;
			}
			cnt++;
		}
		return rtnNum + str_num.substring( pt_pos );
	}
};