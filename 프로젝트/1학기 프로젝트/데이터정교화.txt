시각화
-글자 수, 빈도 수, 어절 수, 어절별 빈도 수, 
 문장 길이, 품사별 빈도수, 워드 클라우드

현재 데이터 : df_val, df 거의 50:50 -> 8:2 ? 



-토크나이저 기능
1. 텍스트 토큰화
2. 토큰 정수 인덱스로 변환
3. 특수 토큰 추가
4. 패딩
5. 트렌스포머 모델과의 통합


https://github.com/likecola/jejutranslater/tree/main
: 제주어 -> 표준어
1. encoder, decoder 등 모델 직접 함수로 구현
2. Okt로 토크나이저 구성


https://github.com/NUGO-NLP/korean-standard-to-dialect
: 표준어 -> 경상도, 전라도 사투리
1. konlpy Kkma
2. bleu_score로 번역의 품질 평가
+ BLEU 점수는 모든 문장 쌍의 BLEU 점수를 합산하여 문장 쌍의 수로 나눈 평균으로 계산
3. 모델 직접 구현

https://github.com/NUGO-NLP/web-demo
: 위 내용 배포할 때 사용한 코드인듯


https://github.com/Owening2/DIalect_Translator
: 경상도 -> 표준어
1. ETRI 형태소 분석 사용
ex) openApiURL = "http://aiopen.etri.re.kr:8000/WiseNLU"
2. 케라스로 모델 직접 구현

https://github.com/jinmang2/KoBART-dialect
: 강원도,경상도,전라도,제주도,충청도 데이터 사용
1. TextCNN 사용
2. 토크나이저는 허깅페이스 PreTrainedTokenizerFast

https://github.com/SeSAC-FinalProject/Jeju-ChatBot
:제주도 사투리 챗봇, 그나마 우리 상황이랑 비슷한듯
1. 허깅페이스 
   XTTS : 제주도 억양,
   Mistral(mistral7B) : 챗봇 대화, 
   BART(kobert-base-V2) : 번역 기능
   tokenizer = AutoTokenizer.from_pretrained("gogamza/kobart-base-v2")
   AutoModelForSeq2SeqLM.from_pretrained("/content/flask/eojin/checkpoint-142243")
2. flask로 웹 구현