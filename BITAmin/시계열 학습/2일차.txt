chapter3 
3-1 예측기법
1. 평균 기법 : 예측한 모든 미래 값은 과거 데이터의 평균과 같다.
meanf(y,h) 시계열과 예측범위

2. 단순 기법 : 모든 예측값을 단순하게 마지막 값으로 둔다.(경제 금융 시계열)
naive(y,h)
rwf(y,h) #위와 같은 역할
-> 데이터가 확률보행 패턴을 따를 때 최적

3. 계절성 단순 기법 : 계절성이 아주 뚜렷한 데이터를 다룰 때
-> 각 예측값을 연도의 같은 계절의 마지막 관측값으로 둠
월별 데이터에서 미래의 모든 2월 값들의 예측값이 마지막으로 관측한 2월 값과 같다.
snaive(y,h)

4. 표류 기법 : 단순 기법을 수정하여 예측값이 시간에 따라 증가하거나 감소
-> 시간에 따른 변화량을 과거 데이터에 나타는 평균 변화량으로 정한다.
처음과 마지막 관측값에 선을 긋고 이 선을 미래로 외삽한 것과 같다.
rwf(y,h drift=TRUE)


3-2 변환과 조정
1. 달력 조정 : 각 월과 각 분기의 날짜를 계산할 수 있다. 
-> 더 단순한 패턴이 모델링 작업을 더 쉽게 만들고 더 정확한 예측치를 주도록 도와줌
monthdays()
dframe <- cbind(Monthly = milk,
                DailyAverage = milk/monthdays(milk))
  colnames(dframe) <- c("월별", "일별 평균")
  autoplot(dframe, facet = TRUE) +
    xlab("연도") + ylab("파운드") +
    ggtitle("젖소별 우유 생산량")

2. 인구 조정 : 전체 대신 1명당 데이터를 고려하는 등
-> 어떤 특정 지역에서 시간에 따른 병원 침상 객수를 다룬다면
   천명당 침상수를 고려하여 인구 변화 효과를 제거하면, 결과를 해석하기 훨씬 쉽다.

3. 인플레이션 조정 : 돈의 가치에 영향을 받는 데이터는 모델링에 앞서 적절하게 조정해야 한다.
-> 소비자 가격 지수는 cpi

4. 수학적 변환 : 데이터에서 시계열의 수준에 비례하여 증가하거나 감소하는 변동이 보일 때
-> 로그 변환, 거듭곱 변환(제곱급, 세제곱근 등), 박스-칵스 변환(로그, 거듭곱 포함)

(lambda <- BoxCox.lambda(elec))
#> [1] 0.2654
autoplot(BoxCox(elec,lambda))

거듭곱 변환의 특징
어떤  yt≤0에서는 모든 관측값에 어떤 상수를 더해서 조정하지 않으면 거듭곱 변환을 사용할 수 없습니다.
단순한 λ값을 선택하시길 바랍니다. 그러면 설명하기 더 쉬워집니다.
예측 결과가 상대적으로 λ값에 따라 민감하게 변하지는 않습니다.
종종 변환이 필요 없을 수 있습니다.
변환해도 예측값에는 때때로 거의 차이가 없지만, 예측구간(prediction interval)에는 커다란 영향을 줍니다.

박스 칵스 변환에서 역변환된 점 예측값이 예측 분포의 평균이 되지 않고 중간값이다.
편향 : 예측값과 주어진 평균 사이의 차이
편향 조정 : 중간값 대신 평균을 사용할 때, 점 예측치들이 편향 조정되었다 말한다.
biasadj=TRUE로 중간값 대신에 평균 예측값 사용 가능

3.3 잔차 진단
적합값 : 각 관측값은 이전의 모든 관측치를 이용하여 예측될 수 있다.
-> 나이브 또는 나이브 계절성 예측에는 매개변수가 없어, 적합값이 진짜 예측치이다.
잔차 : 모델을 맞춘 후에 남는 것을 의미한다.
-> 관측값과 대응되는 적합값과 관측값의 차이와 같다.
-> 어떤 모델이 데이터의 정보를 적절하게 잡아냈는지 여부를 확인할 때 유용
1.잔차(residual)에 상관 관계가 없습니다. 잔차 사이에 상관관계(correlation)가 있다면, 잔차에 예측값을 계산할 때 사용해야하는 정보가 남아 있는 것입니다.
2.잔차의 평균이 0입니다. 잔차의 평균이 0이 아니라면, 예측값이 편향(bias)될 것입니다.

- 자기상관에 대한 포트맨토 검정 : 전체 모음을 하나의 그룹으로 생각해 자기 상관에 대한 형식적인 검정
잔차와 백색잡음 시계열과 다르지 않다를 증명
박스-피어스 검정
융-박스 검정(더 정확)
checkresiduals()


3.4 예측 정확도 평가

-학습 데이터와 테스트 데이터(20%) 
과적합, 과소적합 주의
window 혹은 subset으로 학습, 테스트 데이터 나눔

-예측 오차
관측값과 관측값의 예측치의 차이
잔차는 학습 데이터에 대해 계산하지만, 예측 오차는 테스트 데이터에 대해 계산
잔차는 한 단계 예측값에 기초하지만, 예측 오차는 여러 단계 예측값을 포함할 수 있다.

1. 눈금에 의존하는 오차
예측 오차는 데이터와 같은 눈금 위에 있다. (MAE, RMSE)

2. 백분율 오차
MAPE, sMAPE

3. 눈금 조정된 오차


-시계열 교차 검증
tsCV(), 잔차 RMSE와 교차검증 RMSE 비교
-> 가장 뛰어난 예측 모델 선택은 교차 검증으로 RMSE 가장 작은 모델 찾는 것

-파이프 연산자 : %>%



- forecast 함수
meanf(): 단순 평균 방법을 사용하여 시계열 데이터의 미래 값을 예측합니다. 모든 관측치의 평균을 계산하여 다음 예측 값을 생성합니다.
naive(): 단순 지난 관측치를 사용하여 미래 값을 예측합니다. 최신의 관측치를 다음 예측 값으로 사용합니다.
snaive(): 계절적인 특성이 있는 시계열 데이터에서 단순 지난 계절성 관측치를 사용하여 미래 값을 예측합니다.
rwf(): 랜덤 워크(주어진 시간 간격에서 값이 이전 값에 추가되는 모델)를 사용하여 미래 값을 예측합니다.
croston(): 비수요 예측을 위한 Croston의 방법을 사용하여 미래 값을 예측합니다.
stlf(): 계절성 및 추세를 고려한 시계열 데이터의 미래 값을 예측하기 위해 스무딩 기법을 사용합니다.
ses(): 단순 지수 평활법을 사용하여 시계열 데이터의 미래 값을 예측합니다.
holt(), hw(): Holt-Winters 방법을 사용하여 시계열 데이터의 미래 값을 예측합니다. 이 방법은 추세 및 계절성을 모두 고려합니다.
splinef(): 스플라인 방법을 사용하여 시계열 데이터의 미래 값을 예측합니다.
thetaf(): Theta 방법을 사용하여 시계열 데이터의 미래 값을 예측합니다. 이 방법은 추세와 계절성이 없는 데이터에 적합합니다.
forecast(): 다양한 시계열 예측 방법을 사용하여 미래 값을 예측합니다. 이 함수는 다른 여러 함수들을 자동으로 선택하여 가장 적합한 모델을 결정합니다.




