// Copyright (O 1998~2024 Incruit Corporation All rights reserved
var fappId = "";
var gappId = "";
var users = {};
var site = "";
var social_id = "";
var access_token = "";
var refresh_token = "";
var name = ""
var email = "";
var sex = "";
var birthday = "";
var sTypeParam = "";
var sUserIdParam = "";
var sAccessParam = "";
var sSecretParam = "";
var bauthGoogle = true;
var windoc = document;
var sDomain = windoc.domain;
var L_SERVER_SET = (sDomain.toLowerCase().indexOf("beta") > -1 ? "beta" : (sDomain.toLowerCase().indexOf("semi") > -1 ? "semi" : ""));
var human_status = false;
var subDomain = location.hostname.split('.').shift();
var blnkeepLogin = false;
var boolEmailChk = false;
var g_is_option_yn= "N";
function checkLoginState() {
    site = "FaceBook";
    FB.login(function(response) {
        if (response.authResponse) {
            social_id = response.authResponse.userID;
            access_token = response.authResponse.accessToken;
            refresh_token = response.authResponse.signedRequest;
            getProfile();
        }
    }, {
        scope: "email,user_birthday,user_education_history,user_work_history,publish_actions"
    });
}

function getProfile() {
    FB.api('/me', {fields: 'email,name,gender'}, function (response) {

        name = response.name;
        email = response.email;
        sex = response.gender;

        checkUserInfo(social_id, name, email, '', sex, access_token, refresh_token, site, "");
    });
}

function signInWithKakao() {
    if (typeof Kakao == "undefined") {
        alert("카카오톡 접근이 차단 되었습니다.");
    } else if (subDomain == L_SERVER_SET + "gongmo" || subDomain == L_SERVER_SET + "edu" || subDomain == L_SERVER_SET + "help" || subDomain == L_SERVER_SET + "m.alba" || subDomain == L_SERVER_SET + "m" || subDomain == L_SERVER_SET + "resumedb") {
        location.href = "http://" + L_SERVER_SET + "edit.incruit.com/login/login.asp?autoprocess=" + escape("카카오톡") + "&gotoURL=" + escape(location.href);
    } else {
        site = "kakaoTalk";
        Kakao.Auth.login({
            success: function(authObj) {
                if (authObj != undefined && authObj.access_token != undefined) {
                    access_token = authObj.access_token;
                    refresh_token = authObj.refresh_token;
                    Kakao.Auth.setAccessToken(access_token);
                    Kakao.API.request({
                        url: '/v2/user/me',
                        success: function(res) {
                            social_id = res.id;

                            name = (typeof res.kakao_account.name == "undefined") ? "" : res.kakao_account.name;
                            email = (typeof res.kakao_account.email == "undefined") ? "" : res.kakao_account.email;
                            birthyear = (typeof res.kakao_account.birthyear == "undefined") ? "" : res.kakao_account.birthyear;
                            birthday = (typeof res.kakao_account.birthday == "undefined") ? "" : res.kakao_account.birthday;
                            gender = (typeof res.kakao_account.gender == "undefined") ? "" : res.kakao_account.gender;
                            mobileNo = (typeof res.kakao_account.phone_number == "undefined") ? "" : res.kakao_account.phone_number;

                            if (birthyear != "" && birthday != "") {
                                strbirth = birthyear + "" + birthday;
                            } else {
                                strbirth = "";
                            }

                            if (gender == "male") {
                                gender = "1";
                            } else if (gender == "female") {
                                gender = "2";
                            } else {
                                gender = "";
                            }

                            mobileNo = mobileNo.replace("+", "");
                            mobileNo = mobileNo.replace(" ", "");
                            regex1 = /-/gi;
                            mobileNo = mobileNo.replace(regex1, '');

                            checkUserInfo(social_id, name, email, strbirth, gender, access_token, refresh_token, site, "", "", "", mobileNo);
                        },
                        fail: function(err) {
                            alert("사용자가 많습니다. 다시 시도해 주십시오.");
                        }
                    });
                }
            },
            fail: function(err) {
                alert("카카오톡 사용자가 많습니다. 다시 시도해 주십시오.");
            }
        });
    }
}

function login_google() {}
function signInWithGoogle(response) {
    chkKeepLogin(this);
    site = "Google+";

    const responsePayload = jwt_decode(response.credential);

    access_token = responsePayload.sub;
    social_id = responsePayload.sub;
    email = responsePayload.email;
    name = responsePayload.name;

/*    console.log("ID: " + responsePayload.sub);
    console.log('Full Name: ' + responsePayload.name);
    console.log('Given Name: ' + responsePayload.given_name);
    console.log('Family Name: ' + responsePayload.family_name);
    console.log("Image URL: " + responsePayload.picture);
    console.log("Email: " + responsePayload.email);
*/

    checkUserInfo(social_id, name, email, "", sex, access_token, "", site, "");
}

function signInFailWithGoogle(){
}

function checkUserInfo(id, name, email, birthday, gender, access_token, refresh_token, site, keepLogin, goto_url, clientId, mobileNo) {
    var strSite;

    if (gender != "") {
        if (typeof gender != "undefined") {
            if (gender.indexOf("f") >= 0 || gender.indexOf("F") >= 0) {
                gender = "2";
            } else if (gender.indexOf("m") >= 0 || gender.indexOf("M") >= 0) {
                gender = "1";
            }
        } else gender = "";
    } else gender = "";
    if (typeof email == "undefined") {
        email = "";
    }
    if (typeof name == "undefined") {
        name = "";
    }
    if (typeof birthday == "undefined") {
        birthday = "";
    }
    if (typeof access_token == "undefined") {
        access_token = "";
    }
    if (typeof refresh_token == "undefined") {
        refresh_token = "";
    }
    if (typeof mobileNo == "undefined") {
        mobileNo = "";
    }

    var obj = {};
    obj['id'] = id;
    obj['name'] = name;
    obj['email'] = email;
    obj['birthday'] = birthday;
    obj['sex'] = gender;
    obj['token'] = access_token;
    obj['sToken'] = refresh_token;
    obj['sTypeParam'] = sTypeParam;
    obj['sUserIdParam'] = sUserIdParam;
    obj['sAccessParam'] = sAccessParam;
    obj['sSecretParam'] = sSecretParam;
    obj['AutoLogin'] = 'N';
    obj['mobileNo'] = mobileNo;
    obj['clientId'] = clientId;

    if (keepLogin != "" && isMobileDevice()) {
        blnkeepLogin = keepLogin;
    }

    if (blnkeepLogin || blnkeepLogin == "true") {
        obj['KeepLogin'] = 'Y';
    } else {
        obj['KeepLogin'] = 'N';
    }

    users = obj;

    if (human_status == true || (String(windoc.location).toLowerCase().indexOf("loginquiescence_sns.asp") > -1)) {
        checkHumanMatch(id, site);
    } else {
        checkIncruitUserv2(users, site, goto_url);
    }

    switch (site) {
    case "PAYCO":
        strSite = "payco";
        break;
    case "NAVER":
        strSite = "naver";
        break;
    case "FaceBook":
        strSite = "facebook";
        break;
    case "kakaoTalk":
        strSite = "kakao";
        break;
    case "Google+":
        strSite = "google";
        break;
    case "Twitter":
        strSite = "twitter";
        break;
    case "Apple":
        strSite = "apple";
        break;
    }

    // 소셜 로그인 완료 후 에어스크립트 실행
    if (iNcruit.util.IsApp() == true) {
        iNcruitApp.sendAirBridge("Airbridge_Event", "user.signin", strSite, "", "");
    } else {
        goAIR("user.signin", strSite, "", "");
    }
}

function checkIncruitUserv2(users, site, goto_url) {
    var strSite = "";

    switch (site) {
    case "PAYCO":
        strSite = "payco";
        break;
    case "NAVER":
        strSite = "naver";
        break;
    case "FaceBook":
        strSite = "facebook";
        break;
    case "kakaoTalk":
        strSite = "kakao";
        break;
    case "Google+":
        strSite = "google";
        break;
    case "Twitter":
        strSite = "twitter";
        break;
    case "Apple":
        strSite = "apple";
        break;
    }

	//로그인Tab 개인으로 설정
    var expires = new Date();
    expires.setTime(expires.getTime() + (1000 * 60 * 60 * 24 * 1000));
    document.cookie = "LUSPERSON=Y" + (";expires=" + expires.toGMTString()) + (";path=/;domain=incruit.com");

    if (strSite != "") {

        jQuery.ajax({
            url: "/g_common/bizcommon/v2/sociallogin_ajax_v2.asp",
            data: {
                "gbn": "checkIncruitUserLogin",
                "authResp": escape(JSON.stringify(users)),
                "site": site
            },
            async: false,
            success: function(data) {
            	var arrData = data.split("#");
							if (Array.isArray(arrData) == true) {
								if (arrData.length > 1){
									data = arrData[0];
									g_is_option_yn = arrData[1];

								}
							}
                if (data == "Login Success") {
                    getLoginIncruitv2();
                    BeforeSnsLogin(strSite);
                } else if (data == "No Id") {
                    getLoginIncruitv2();
                } else if (data == "Login Fail") {
                    alert("소셜로그인시 알 수 없는 문제로 인해 로그인하지 못했습니다.\n다시 시도해 보십시오.");
                } else if (data == "Login dormancy") {
                    var f = document.createElement("form");
                    f.setAttribute("method", "post");
					f.setAttribute("action", "https://" + L_SERVER_SET.toLowerCase() + "edit.incruit.com/dormancy/release.asp");
                    document.body.appendChild(f);
                    var i = document.createElement("input");
                    i.setAttribute("type", "hidden");
                    i.setAttribute("name", "user_id");
                    i.setAttribute("value", users.id);
                    f.appendChild(i);
                    i = document.createElement("input");
                    i.setAttribute("type", "hidden");
                    i.setAttribute("name", "partner_cd");
                    i.setAttribute("value", site);
                    f.appendChild(i);
                    f.submit();
                } else if (data == "No User") {
					//페이스북,트위터 신규가입 중단
                    if (site == "FaceBook") {
                        makeNoEntrance(site);
                    } else if (site == "Twitter") {
						//트위터 예외처리
                        const url = new URL(window.location.href);
                        const urlParams = url.searchParams;
                        var goUrl = urlParams.get('gotourl');

                        if (isMobileDevice()) {
                            location.href = G_HOSTNAME_SSL_EDIT + "/login/loginmobile.asp?FailMessage=NoUser&gotoURL=" + goUrl;
                        } else {
                            location.href = G_HOSTNAME_SSL_EDIT + "/login/login.asp?FailMessage=NoUser&gotoURL=" + goUrl;
                        }
                    } else {
                        makeFormProfile(users, site);
                    }
                } else if (data == "Find Email") {
                    SocialLoginLinked(users, site);
                } else if (data == "TempPassword") {
                    location.href = G_HOSTNAME_SSL_EDIT + "/profile/managememinfo.asp?PageId=02&mode=temppassword"
                } else if (data == "ExpireTerm") {
                    location.href = G_HOSTNAME_SSL_EDIT + "/profile/managememinfo.asp?PageId=02&mode=expireterm"
                } else if (data != "" && data.length > 5) {
                    var arrData = data.split("#");
                    var returnData;
                    var jsonData;

					// 앱에서의 가입/로그인일 경우, 앱에서 소셜로그인한 경우  앱브릿지 실행
                    if (Array.isArray(arrData) == true) {
                        if (arrData.length > 1) {
                            if (arrData[0] == "Login Success") {
								 // 소셜 로그인 완료 앱일경우
                                if (iNcruit.util.IsApp() == true) {
                                    BeforeSnsLogin(strSite);
                                    BeforeSnsLoginApp(strSite, users.id);
                                }

                                returnData = JSON.parse(unescape(arrData[1]));

                                try {
                                    jsonData = JSON.stringify(returnData);
										iNcruitApp.sendBridge("Login", jsonData, '');		// 로그인 완료 앱브릿지 실행

										// 로그인 이전의 url로 이동(aos에서만 제대로 작동함. ios는 별도로 받은 gotourl로 이동되도록 함)
                                    if (iNcruitApp.getPlatform() == "AOS") {
                                        getLoginIncruitv2();
                                    } else if (iNcruitApp.getPlatform() == "iOS") {
                                        if (goto_url != "")	{
											var goUrl = goto_url;
										} else {
											var goUrl = G_HOSTNAME_MOBILE;
										}

										//휴면전환후 첫 로그인시
										if (getRevivalYn() == "Y") {
											var returnUrl = "https://" + L_SERVER_SET.toLowerCase() + "edit.incruit.com/login/loginrevival_agree.asp?returnURL="+goUrl;
											location.replace(returnUrl);
										} else {
											location.replace(goUrl);
										}
                                    }

                                } catch (exception) {}
                            }
                        }
                    }
                }
            },
            error: function(request, status, error) {
                var strData = escape("status : " + status + "[" + request.status + "]" + "| error : " + error + "");

                jQuery.ajax({
                    url: "/g_common/bizcommon/v2/sociallogin_error_log.asp",
					data: {"authdata":strData},
                    async: false,
                    success: function(data) {
                        alert("사용자가 많습니다. 다시 시도해 주십시오.[E0]");
                    },
                    error: function(request, status, error) {
                        alert("사용자가 많습니다. 다시 시도해 주십시오.[E1]");
                    }
                });
            }
        });
    }
}

// 로그인 후 이동할 페이지
function getLoginIncruitv2() {
    var changeUrl = "";
    // 간편로그인 연동으로 간편로그인 로그인 한 경우 (PC웹에서만)
    if (String(windoc.location).toLowerCase().indexOf("gotourl") > -1) {

        var goUrl = getUrlVars()['gotourl'];

        if ((goUrl != "") && (typeof goUrl != "undefined")) {
            if (isMobileDevice() && String(windoc.location).toLowerCase().indexOf("/support/searchlogininfo.asp") > -1) {
                changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "m.incruit.com";
            } else {
                if ((unescape(goUrl).toLowerCase() == "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com" || unescape(goUrl).toLowerCase() == "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com/") && !(isMobileDevice())) {
					//PC 메인에서 진입시
                    changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com/myhome";
                } else {
                    changeUrl = unescape(goUrl);
                }
            }
        } else {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com";
        }
        // 리퍼러가 있거나 PC웹 edit의 경우 이전 페이지로 이동
    } else if (jQuery("input[name=gotoURL]").eq(0).length >= 1) {
        try {
            if (jQuery("input[name=gotoURL]").eq(0).length >= 1) {
                changeUrl = unescape(jQuery("input[name=gotoURL]").eq(0).val());
            } else {
                changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com";
            }
        } catch (e) {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com";
        }
    } else if ((windoc.referrer != "" && typeof windoc.referrer != "undefined") || sDomain.indexOf("edit") > -1) {
        if (isMobileDevice()) {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "m.incruit.com";
        } else {
            changeUrl = windoc.referrer;
            changeUrl = (changeUrl.indexOf(".com/login/login") > -1) ? G_HOSTNAME_MY : changeUrl;
        }
    } else {
        changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com";
    }

    changeUrl = (changeUrl == "") ? G_HOSTNAME_MY : changeUrl;

    if (changeUrl.indexOf("undefined") > -1) {
        if (isMobileDevice()) {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "m.incruit.com";
        } else {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com";
        }
    }

    if (changeUrl.toLowerCase().indexOf("pageid=09") > -1) {
        if (isMobileDevice()) {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "m.incruit.com";
        } else {
            changeUrl = "https://" + L_SERVER_SET.toLowerCase() + "www.incruit.com";
        }
    }

	//휴면전환후 첫 로그인시
	if (getRevivalYn() == "Y") {
		var returnUrl = "https://" + L_SERVER_SET.toLowerCase() + "edit.incruit.com/login/loginrevival_agree.asp?returnURL="+changeUrl;
		location.replace(returnUrl);
	} else {
	    location.replace(changeUrl);
	}
}

function getRevivalYn() {
	var user = iNcruit.cookie.GetCookie("incUinfo");
	if (user == "") {
		return "";
	} else {
		user = user.split("&");
	}

	for (i in user) {
		if (user[i].indexOf("Revival=") >= 0) {
			return user[i].split("=")[1];
		}
	}

	return "";
}
function checkHumanUserInfo(id, site, userid, usernum, infokeepterm) {

    jQuery.ajax({
        url: "/g_common/bizcommon/v2/loginquiescence_sns_ajax.asp",
        type: "POST",
        data: {
            "Partner_Cd": site,
            "UserId": userid,
            "UserNum": usernum,
				"UserInfoKeepTerm" : infokeepterm },
        success: function(data) {

            if (data == "LOGIN_OK") {
				// 0:개인, 1:기업
                var userTypeCode = 0;

				// 페이지 이동
                if (iNcruit.util.IsMobile()) {
                    location.replace(iNcruit.domain.G_HOSTNAME_SSL_EDIT + "/login/loginquiescenceok.asp?typecode=" + userTypeCode);
                } else {
                    try {
                        if (opener) {
							opener.location.replace(iNcruit.domain.G_HOSTNAME_SSL_EDIT + "/login/loginquiescenceok.asp?typecode=" + userTypeCode);self.close();
                        } else {
                            location.replace(iNcruit.domain.G_HOSTNAME_SSL_EDIT + "/login/loginquiescenceok.asp?typecode=" + userTypeCode);
                        }
                    } catch (e) {
                        location.replace(iNcruit.domain.G_HOSTNAME_SSL_EDIT + "/login/loginquiescenceok.asp?typecode=" + userTypeCode);
                    }
                }

            } else if (data == "LOGIN_FAIL") {
                alert("계정정보가 일치하지 않습니다.");
                checkHumanUserInfo_Fail(id, site);
            } else {
                alert("오류:" + data);
                checkHumanUserInfo_Fail(id, site);
            }
        },
        error: function(request, status, error) {
            alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
            checkHumanUserInfo_Fail(id, site);
        }
    });
}

function checkHumanUserInfo_Fail(id, site) {
    var f = document.createElement("form");
    f.setAttribute("method", "post");
    f.setAttribute("action", iNcruit.domain.G_HOSTNAME_SSL_EDIT + "/login/loginquiescence_sns.asp");
    document.body.appendChild(f);
    var i = document.createElement("input");
    i.setAttribute("type", "hidden");
    i.setAttribute("name", "user_id");
    i.setAttribute("value", id);
    f.appendChild(i);
    i = document.createElement("input");
    i.setAttribute("type", "hidden");
    i.setAttribute("name", "partner_cd");
    i.setAttribute("value", site);
    f.appendChild(i);
    f.submit();
}

function getUrlVars() {
    var vars = [],
        hash;
    var hashes = (String(window.location.href).toLowerCase()).slice(window.location.href.indexOf('?') + 1).split('&');
    for (var i = 0; i < hashes.length; i++) {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }
    return vars;
}

function makeFormProfile(users, site) {
    SocialLinkedForm(users, site);
}

function SocialLinkedForm(users, site) {
    jQuery("body").append(makeFormConfirmProfile_v2(users, site));
    jQuery("#frmConfirmProfile").submit();
}

function SocialLoginLinked(users, site) {
    jQuery("body").append(makeFormLoginLinked(users, site));

    if (isMobileDevice()) {
        jQuery("#frmLoginLinked").submit();
    } else {
        var x = window.screenLeft - 250;
        var y = window.screenTop + 150;
        var newWidth = document.body.clientWidth;
        var newHeight = document.body.clientHeight;
        var popWidth = "480";
        var popHeight = "650";

        var showLeft = x + (newWidth / 2) - (popWidth / 2);
        var showTop = y + (newHeight / 2) - (popHeight / 2);

        var pop_title = "PopupLoginLinked";
        jQuery("#frmLoginLinked").attr("target", pop_title);
        window.open("", pop_title, "toolbar=no, location=no, width=480, height=650,left=" + showLeft + ", top=" + showTop + "");
        $("#frmLoginLinked").submit();
    }
}

// 회원가입 시 이동페이지
function makeFormConfirmProfile_v2(users, site) {
    var strForm = "";
    var rurl = getUrlVars()['gotourl'];

    strForm += "<form id='frmConfirmProfile' method='post' action='https://" + L_SERVER_SET.toLowerCase() + "edit.incruit.com/entrance/entrancepersonal_agree.asp";
    if (iNcruit.URL.param.bz_tracking_id != undefined) {
        strForm += "?bz_tracking_id=" + iNcruit.URL.param.bz_tracking_id;
    }
    strForm += "'>";
    strForm += " <input type='hidden' name='users' value='" + escape(JSON.stringify(users)) + "' />";
    strForm += " <input type='hidden' name='site' value='" + site + "' />";

	// 앱에서만 실행
    if (iNcruit.util.IsApp() == true) {
		// 앱에서 페이코 가입시 아래와 같이 token 파라미터를 보내주어야 함.
        if (site == "PAYCO") {
			var paycotoken = { "access_token" : users.token
							  , "access_token_secret":""
							  , "refresh_token":""
            };
            strForm += " <input type='hidden' name='token' value='" + escape(JSON.stringify(paycotoken)) + "' />";
        }
    }

    // gotourl이 있는 경우
    if (String(windoc.location).toLowerCase().indexOf("gotourl") > -1) {
        // 취업학교
        if (typeof rurl != "undefined") {
            if (rurl.indexOf("school.incruit.com") > -1) {
                strForm += " <input type='hidden' name='srcURL' value='http://" + L_SERVER_SET.toLowerCase() + "school.incruit.com' />";
            } else {
                if (rurl.indexOf("event") > -1 || rurl.indexOf("people") > -1 || rurl.indexOf("selfintro") > -1 || rurl.indexOf("unse") > -1 || rurl.indexOf("sherlockn") > -1) {
                    strForm += " <input type='hidden' name='srcURL' value='" + rurl + "' />";
                }
            }
        }

        // 모바일웹
    } else if (isMobileDevice()) {
        if (typeof rurl != "undefined") {
            strForm += " <input type='hidden' name='srcURL' value='" + rurl + "' />";
		}
        else{
            strForm += " <input type='hidden' name='srcURL' value='http://" + L_SERVER_SET.toLowerCase() + "m.incruit.com/resume/resume.asp' />";
        }
        // PC웹
    } else {
        if (typeof rurl != "undefined") {
            strForm += " <input type='hidden' name='srcURL' value='" + rurl + "' />";
		}
        else {
            strForm += " <input type='hidden' name='srcURL' value='http://" + L_SERVER_SET.toLowerCase() + "www.incruit.com/resume/resume.asp' />";
        }
    }

    if (isMobileDevice()) {
        strForm += " <input type='hidden' name='isMobile' value='Y' />";
    } else {
        strForm += " <input type='hidden' name='isMobile' value='N' />";
    }

    strForm += "</form>";
    return strForm;
}

function makeFormLoginLinked(users, site) {
    var strForm = "";
    var rurl = getUrlVars()['gotourl'];

    strForm += "<form id='frmLoginLinked' name='frmLoginLinked' method='post' action='https://" + L_SERVER_SET.toLowerCase() + "edit.incruit.com/g_common/bizcommon/v2/socialloginlinked.asp";
    strForm += "'>";
    strForm += " <input type='hidden' name='users' value='" + escape(JSON.stringify(users)) + "' />";
    strForm += " <input type='hidden' name='site' value='" + site + "' />";

	// 앱에서만 실행
    if (iNcruit.util.IsApp() == true) {
		// 앱에서 페이코 가입시 아래와 같이 token 파라미터를 보내주어야 함.
        if (site == "PAYCO") {
			var paycotoken = { "access_token" : users.token
							  , "access_token_secret":""
							  , "refresh_token":""
            };
            strForm += " <input type='hidden' name='token' value='" + Encrypt(escape(JSON.stringify(paycotoken))) + "' />";
        }
    }

    // gotourl이 있는 경우
    if (String(windoc.location).toLowerCase().indexOf("gotourl") > -1) {
        // 취업학교
        if (typeof rurl != "undefined") {
            if (rurl.indexOf("school.incruit.com") > -1) {
                strForm += " <input type='hidden' name='srcURL' value='http://" + L_SERVER_SET.toLowerCase() + "school.incruit.com' />";
            } else {
                if (rurl.indexOf("event") > -1 || rurl.indexOf("people") > -1 || rurl.indexOf("selfintro") > -1 || rurl.indexOf("unse") > -1) {
                    strForm += " <input type='hidden' name='srcURL' value='" + rurl + "' />";
                }
            }
        }

        // 모바일웹
    } else if (isMobileDevice()) {
        if (typeof rurl != "undefined") {
            strForm += " <input type='hidden' name='srcURL' value='" + rurl + "' />";
		}
        else{
            strForm += " <input type='hidden' name='srcURL' value='http://" + L_SERVER_SET.toLowerCase() + "m.incruit.com/resume/resume.asp' />";
        }
        // PC웹
    } else {
        if (typeof rurl != "undefined") {
            strForm += " <input type='hidden' name='srcURL' value='" + rurl + "' />";
		}
        else {
            strForm += " <input type='hidden' name='srcURL' value='http://" + L_SERVER_SET.toLowerCase() + "www.incruit.com/resume/resume.asp' />";
        }
    }

    if (isMobileDevice()) {
        strForm += " <input type='hidden' name='isMobile' value='Y' />";
    } else {
        strForm += " <input type='hidden' name='isMobile' value='N' />";
    }

    strForm += "</form>";
    return strForm;
}

function generate_state() {
    var date = new Date();
    var ranNum = Math.random() * 130;
    var state = window.md5(date + ranNum);
    return state;
}

function isMobileDevice() {
    var uagent = navigator.userAgent.toLowerCase();
    var mobile_reg = new RegExp('android|blackberry|iphone|ipad|ipod|opera mini|iemobile','g');
    if (uagent.search(mobile_reg) >= 0) {
        return true;
    } else {
        return false;
    }
}
// 로그인 유지
function chkKeepLogin(e) {
    // www PC 메인
    if (sDomain.indexOf("www") > -1) {
        blnkeepLogin = jQuery("#keepLogin").is(":checked");
        // PC, 모바일웹 EDIT
    } else if (sDomain.indexOf("edit") > -1) {
        blnkeepLogin = jQuery("#keepLogIn, #cID").is(":checked");
        // JOB
    } else if (sDomain.indexOf("job") > -1) {
        blnkeepLogin = jQuery("#keepLogIn, #cID, #keepLogin").is(":checked");
    } else if (sDomain.indexOf("lab") > -1) {
        blnkeepLogin = jQuery("#keepLogIn, #cID, #keepLogin").is(":checked");
        // 서브도메인 왼쪽 로그인박스
    } else if (jQuery(e).parents()[2].id.toLowerCase() == "div_social_wrap") {
        blnkeepLogin = jQuery("#keepLogIn").is(":checked");
        // 서브도메인 중간 로그인박스
    } else if (jQuery(e).parents()[2].id.toLowerCase() == "div_social_wrap2") {
        blnkeepLogin = jQuery("#keepLogIn2").is(":checked");
    } else {
        blnkeepLogin = false;
    }
}


var _getCookie = function(name) {
    var nameStr = name + "=";
    var nameLen = nameStr.length;
    var cookieLen = document.cookie.length;

    var i = 0;
    while (i < cookieLen) {
        var j = i + nameLen;
        if (document.cookie.substring(i, j) == nameStr) {
            var end = document.cookie.indexOf(";", j);
            end = (end == -1) ? document.cookie.length : end;
            return unescape(document.cookie.substring(j, end));
        }
        i = document.cookie.indexOf(" ", i) + 1;
        if (i == 0) {
            break;
        }
    }
};

//구글 스크립트
var GoogleAdSet = function() {
    goog_snippet_vars = function() {
        var w = window;
        w.google_conversion_id = 1067914317;
        w.google_conversion_language = "en";
        w.google_conversion_format = "3";
        w.google_conversion_color = "ffffff";
        w.google_conversion_label = "XyaWCOry4msQzaic_QM";
        w.google_remarketing_only = false;

        var GoogleAdObj = document.createElement("script");
        var GoogleAdjObj = jQuery(GoogleAdObj);
        GoogleAdjObj.attr({ "type": "text/javascript", "src": "//www.googleadservices.com/pagead/conversion_async.js" });
        jQuery("head").append(GoogleAdjObj);
    }
    // 아래의 코드를 변경하지 마세요.
    goog_report_conversion = function(url) {
        goog_snippet_vars();
        window.google_conversion_format = "3";
        var opt = new Object();
        opt.onload_callback = function () {
        }

        var conv_handler = window['google_trackConversion'];
        if (typeof (conv_handler) == 'function') {
            conv_handler(opt);
        }
    }

    goog_report_conversion("");
};

//애플로그인 관련
function generateNonce() {
    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);
};

var nonce = generateNonce();

function initAppleID() {

    var tmpUrl = (String(window.location.href).toLowerCase()).split('?');
    var strRedirectURL = tmpUrl[0];
    strRedirectURL = strRedirectURL.replace('#', '');

    AppleID.auth.init({
        clientId: "com.incruit.auth",
        scope: "email name",
        redirectURI: strRedirectURL,
        state: "0",
        nonce: nonce,
        usePopup: true
    });

	// 인증 성공
    document.addEventListener('AppleIDSignInOnSuccess', function(data) {
        authcode = data.detail.authorization.code;
        id_token = data.detail.authorization.id_token;

        var parsedData = jwt_decode(id_token);

        var firstName = "";
        var lastName = "";
        var fullName = "";
        try {
            firstName = data.detail.user.name.firstName;
            lastName = data.detail.user.name.lastName;
		} catch (e) {
        }

        if ((typeof firstName == "undefined") || (firstName == "" && lastName == "")) {
            fullName = "";
        } else {
            fullName = lastName + firstName;
        }

        signInWithAppleID(parsedData, authcode, fullName);

    });

	// 인증 실패
    document.addEventListener('AppleIDSignInOnFailure', function(error) {
		if (error.detail.error == "popup_closed_by_user" || error.detail.error == "user_cancelled_authorize") {
		} else {
            alert("Apple ID 인증이 실패되었습니다.");
        }
    });
}

function signInWithAppleID(parsedData, authcode, name) {
    chkKeepLogin(this);
    site = "Apple";
    var clientId = "com.incruit.auth";

    if (typeof parsedData == "object") {
        for (var x in parsedData) {
            if (typeof x != "undefined") {
                if (x == "sub") {
                    social_id = parsedData[x];
                } else if (x == "email") {
                    email = parsedData[x];
                } else if (x == "nonce") {
                    reqnonce = parsedData[x];
                }

            }
        }
    }

    if (nonce != reqnonce) {
        alert("Apple ID 인증이 실패되었습니다.");
    } else {
		//애플아이디 refresh_token 을 가져오기 위하여 refresh_token 에 authcode 추가
        checkUserInfo(social_id, name, email, "", "", social_id, authcode, site, "", "", clientId);
    }

}

jQuery(windoc).ready(function() {
    if (L_SERVER_SET.toLowerCase() == "beta") {
        fappId = "217758521655002";
    } else if (L_SERVER_SET.toLowerCase() == "semi") {
        fappId = "240543579382498";
    } else {
        fappId = "359526520785114";
    }
    (function(d) {
        var js, id = 'facebook-jssdk';
        if (d.getElementById(id)) {
            return;
        }
        js = d.createElement('script');
        js.id = id;
        js.async = true;
        js.src = "//connect.facebook.net/ko_KR/all.js";
        d.getElementsByTagName('head')[0].appendChild(js);
    }(windoc));
    jQuery("body").delegate('#fb_signin_btn', 'click', function(e) {

        if (iNcruit.util.IsApp()) {
            var jsonData;
			var sendData = {  snsname : 'facebook'
							  ,gotourl  : unescape(iNcruit.Request.GetParam('gotoURL'))
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
                iNcruitApp.sendBridge("SocialLogin", "facebook", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
                if (IsOldApp() == true) {
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'facebook'});
                } else {
                    iNcruitApp.sendBridge("SocialLogin", sendData, "");
                }
            }
        } else {
            if (typeof FB == 'undefined') {
                alert("IE8 이하 버전에서는 페이스북 로그인을 더이상 지원하지 않습니다.\n상위버전 브라우저를 이용하세요");
            } else {
                chkKeepLogin(this);
                e.preventDefault();
                site = "FaceBook";
                FB.login(function(response) {
                    if (response.authResponse) {
                        social_id = response.authResponse.userID;
                        access_token = response.authResponse.accessToken;
                        refresh_token = response.authResponse.signedRequest;
                        getProfile();
                    }
                }, {
                    scope: "email,user_birthday,user_education_history,user_work_history,publish_actions"
                });
            }
        }
    });
    if (typeof Kakao != "undefined") {
        try {
            if (sDomain.indexOf("m.incruit.com") > -1 && location.href.indexOf("jobpost.asp") > -1) {
            } else {
                //if (L_SERVER_SET.toLowerCase() == "beta") {
                //    Kakao.init('a275e7c1442f120065099d5710fb63ed');
                //} else if (L_SERVER_SET.toLowerCase() == "semi") {
                //    Kakao.init('f3cb6ae21b4a28263bdcfc1ac950923a');
                //} else if (L_SERVER_SET.toLowerCase() == "") {
                Kakao.init('d84b15538f237daaa821bb300f8f05ae');
                //}
            }
            //Kakao.Auth.logout(function (result) { });
        } catch (e) {
            }
    }
    jQuery("body").delegate('#kakao_signin_btn', 'click', function(e) {

        if (iNcruit.util.IsApp()) {
            var jsonData;
			var sendData = {  snsname : 'kakao'
							  ,gotourl  : unescape(iNcruit.Request.GetParam('gotoURL'))
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
                iNcruitApp.sendBridge("SocialLogin", "kakao", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
                if (IsOldApp() == true) {
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'kakao'});
                } else {
                    iNcruitApp.sendBridge("SocialLogin", sendData, "");
                }
            }
        } else {
            chkKeepLogin(this);
            e.preventDefault();
            signInWithKakao();
        }
    });

	//2023-03-27 (김성진) 구글로그인 변경
    var po = windoc.createElement('script');
    po.type = 'text/javascript';
    po.async = true;
    po.defer = true;
    po.src = 'https://accounts.google.com/gsi/client';
    var s = windoc.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(po, s);

    if (iNcruit.util.IsApp()) {
        jQuery("body").delegate('#google_signin_btn', 'click', function(e) {
            var jsonData;
			var sendData = {  snsname : 'google'
							  ,gotourl  : unescape(iNcruit.Request.GetParam('gotoURL'))
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
                iNcruitApp.sendBridge("SocialLogin", "google", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
                if (IsOldApp() == true) {
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'google'});
                } else {
                    iNcruitApp.sendBridge("SocialLogin", sendData, "");
                }
            }
        });
    }

    jQuery("body").delegate("#payco_signin_btn, #payco_start_signin_btn", "click", function(e) {

        if (iNcruit.util.IsApp()) {
            var strgotoUrl = iNcruit.Request.GetParam('gotoURL');

            if (strgotoUrl == "undefined" || strgotoUrl == "") {
                strgotoUrl = jQuery("#gotoURL").val();
            }

            var jsonData;
			var sendData = {  snsname : 'payco'
							  ,gotourl  : unescape(strgotoUrl)
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
				// INCRUITAPP.sendMessage('SocialLogin',"payco");
                iNcruitApp.sendBridge("SocialLogin", "payco", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
                if (IsOldApp() == true) {
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'payco','gotourl':iNcruit.Request.GetParam('gotoURL')});
                } else {
                    iNcruitApp.sendBridge("SocialLogin", sendData, "");
                }
            }
        } else {
	        // www PC 메인
            if (sDomain.indexOf("www") > -1) {
                blnkeepLogin = jQuery("#keepLogin").is(":checked");
	            // PC, 모바일웹 EDIT
            } else if (sDomain.indexOf("edit") > -1) {
                blnkeepLogin = jQuery("#keepLogIn, #cID").is(":checked");
	            // Job
            } else if (sDomain.indexOf("job") > -1) {
                blnkeepLogin = jQuery("#keepLogIn, #cID, #keepLogin").is(":checked");
	            // 서브도메인 왼쪽, 중간 로그인박스
            } else if (jQuery(this).parents()[1].id.toLowerCase() == "leftidpwd") {
                blnkeepLogin = jQuery("#keepLogIn").is(":checked");
            } else if (jQuery(this).parents()[1].className.toLowerCase() == "idpwd") {
                blnkeepLogin = jQuery("#keepLogIn2").is(":checked");
            } else {
                blnkeepLogin = false;
            }

            if (location.href.indexOf("https:") > -1) {
                _inc.singlesign.Open("payco", null, location.href, true, blnkeepLogin);
            } else {
                _inc.singlesign.Open("payco", null, location.href, false, blnkeepLogin);
            }
        }

    });
    jQuery("body").delegate("#payco_Join_btn", "click", function(e) {
        // www PC 메인
        if (sDomain.indexOf("www") > -1) {
            blnkeepLogin = jQuery("#keepLogin").is(":checked");
            // PC, 모바일웹 EDIT
        } else if (sDomain.indexOf("edit") > -1) {
            blnkeepLogin = jQuery("#keepLogIn, #cID").is(":checked");
            // JOB
        } else if (sDomain.indexOf("job") > -1) {
            blnkeepLogin = jQuery("#keepLogIn, #cID, #keepLogin").is(":checked");
            // 서브도메인 왼쪽, 중간 로그인박스
        } else if (jQuery(this).parents()[1].id.toLowerCase() == "leftidpwd") {
            blnkeepLogin = jQuery("#keepLogIn").is(":checked");
        } else if (jQuery(this).parents()[1].className.toLowerCase() == "idpwd") {
            blnkeepLogin = jQuery("#keepLogIn2").is(":checked");
        } else {
            blnkeepLogin = false;
        }

        if (location.href.indexOf("https:") > -1) {
            _inc.singlesign.Open("paycojoin", null, location.href, true, blnkeepLogin);
        } else {
            _inc.singlesign.Open("paycojoin", null, location.href, false, blnkeepLogin);
        }
    });
    jQuery("body").delegate('#naver_signin_btn', 'click', function(e) {

        if (iNcruit.util.IsApp()) {
            var jsonData;
			var sendData = {  snsname : 'naver'
							  ,gotourl  : unescape(iNcruit.Request.GetParam('gotoURL'))
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
				// INCRUITAPP.sendMessage('SocialLogin',"naver");
                iNcruitApp.sendBridge("SocialLogin", "naver", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
                if (IsOldApp() == true) {
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'naver'});
                } else {
                    iNcruitApp.sendBridge("SocialLogin", sendData, "");
                }
            }
        } else {
            var naverStateToken = generate_state();
            document.domain = "incruit.com";

            var strSSLFlag = "";
            if (jQuery("#strSSLFlag").length > 0) {
                strSSLFlag = jQuery("#strSSLFlag").val();
            }

			// Mobile
            if (isMobileDevice()) {
                var rurl = "";
                var keepLogin = jQuery("#cID").is(":checked");
                if (String(windoc.location).toLowerCase().indexOf("gotourl") > -1) {
                    rurl = getUrlVars()['gotourl'];
                }

                if (rurl == "") {
                    rurl = "https://" + L_SERVER_SET + "m.incruit.com"
                }


                location.href = "https://" + L_SERVER_SET + "edit.incruit.com/g_common/bizcommon/v2/sociallogin_n_ajax.asp?statetoken=" + naverStateToken + ((rurl != "") ? "&gotourl=" + escape(rurl) : "") + "&kl=" + keepLogin + "&strsslflag=" + strSSLFlag;

				// PC
            } else {
                chkKeepLogin(this);
                window.open("https://" + L_SERVER_SET + "edit.incruit.com/g_common/bizcommon/v2/sociallogin_n_ajax.asp?statetoken=" + naverStateToken + "&strsslflag=" + strSSLFlag, "", "width=460px, height=750px,scrollbars=yes");
            }
        }
    });
    jQuery('body').delegate("#twitter_signin_btn", "click", function(e) {
        alert("트위터 정책 변경으로 인하여 로그인이 중단되었습니다.\n다른 로그인 수단을 이용해주세요.\n\n관련 문의는 고객만족센터 1588-6577로 문의해주세요.\n(평일 09:00~19:00)");
        return;

        if (iNcruit.util.IsApp()) {
            var jsonData;
			var sendData = {  snsname : 'twitter'
							  ,gotourl  : unescape(iNcruit.Request.GetParam('gotoURL'))
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
                iNcruitApp.sendBridge("SocialLogin", "twitter", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
				/*
				if (IsOldApp() == true){
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'twitter'})
				} else {
					iNcruitApp.sendBridge("SocialLogin", sendData, "");
				}*/
                alert("트위터 운영정책 변경으로 인하여 로그인을 이용할 수 없습니다. PC로 로그인하여 일반 계정으로 전환 후 서비스 이용부탁드립니다.\n\n* 인크루트 웹사이트(PC) > 트위터 로그인 > 회원정보관리 > 회원정보수정 > 인크루트 계정 만들기 > ID/PW 설정 > 앱 재실행 > ID/PW 입력 > 로그인");
            }
        } else {
            document.domain = "incruit.com";
			// Mobile
            var strSSLFlag = "";
            if (jQuery("#strSSLFlag").length > 0) {
                strSSLFlag = jQuery("#strSSLFlag").val();
            }
            var rurl = "";
            var keepLogin = jQuery("#cID").is(":checked");
            if (String(windoc.location).toLowerCase().indexOf("gotourl") > -1) {
                rurl = getUrlVars()['gotourl'];
            } else {
                rurl = String(windoc.location).toLowerCase();
            }

            if (isMobileDevice()) {
                if (strSSLFlag == "y") {
                    location.href = "https://" + L_SERVER_SET + "www.incruit.com/g_common/popup/popupsociallogin.asp?site=Twitter" + ((rurl != "") ? "&gotourl=" + escape(rurl) : "") + "&kl=" + keepLogin;
                } else {
                    location.href = "https://" + L_SERVER_SET + "www.incruit.com/g_common/popup/popupsociallogin.asp?site=Twitter" + ((rurl != "") ? "&gotourl=" + escape(rurl) : "") + "&kl=" + keepLogin;
                }
				// PC
            } else {
                chkKeepLogin(this);
                location.href = "https://" + L_SERVER_SET + "www.incruit.com/g_common/popup/popupsociallogin.asp?site=Twitter" + ((rurl != "") ? "&gotourl=" + escape(rurl) : "") + "&kl=" + keepLogin;
            }
        }
    });

	//애플아이디
    var script = document.createElement('script');
    script.type = "text/javascript";
    script.src = "https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/ko_KR/appleid.auth.js";
    document.getElementsByTagName('head')[0].appendChild(script);

    var script2 = document.createElement('script');
    script2.type = "text/javascript";
    script2.src = "/g_common/clientscript/jwt-decode.min.js";
    document.getElementsByTagName('head')[0].appendChild(script2);

    jQuery("body").delegate('#apple_signin_btn', 'click', function(e) {

        if (iNcruit.util.IsApp()) {
            var jsonData;
			var sendData = {  snsname : 'apple'
							  ,gotourl  : unescape(iNcruit.Request.GetParam('gotoURL'))
            };
            sendData = JSON.stringify(sendData);

            if (iNcruitApp.getPlatform() == 'AOS') {
                iNcruitApp.sendBridge("SocialLogin", "apple", "");
            } else if (iNcruitApp.getPlatform() == 'iOS') {
				// IOS일 경우 gotourl을 추가로 보냄(aos는 보낼 필요 없음)
				// 옛날 앱일땐 이전 명령어로
                if (IsOldApp() == true) {
					window.webkit.messageHandlers.callbackHandler.postMessage({'SocialLogin':'apple'});
                } else {
                    iNcruitApp.sendBridge("SocialLogin", sendData, "");
                }
            }

        } else {
            if ((navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (navigator.userAgent.indexOf("msie") != -1)) {
                document.domain = "incruit.com";
                window.open('/g_common/popup/popupsociallogin.asp?site=apple', 'appleauth', 'width=705,height=710,scrollbar=yes');
            } else {
                initAppleID();

                AppleID.auth.signIn();
            }
        }
    });

    setTimeout(function() {
        var strParam = "";
        var intIdx = -1;
        var strSocial = "";
        strParam = (window.location.search).toLowerCase();
        intIdx = strParam.indexOf("autoprocess");
        if (strParam != "" && intIdx > -1) {
            strSocial = unescape(getUrlVars()['autoprocess']);
            switch (strSocial) {
            case "페이스북":
                jQuery("#fb_signin_btn").click();
                break;
            case "네이버":
                jQuery("#naver_signin_btn").click();
                break;
            case "트위터":
                jQuery("#twitter_signin_btn").click();
                break;
            case "카카오톡":
                jQuery("#kakao_signin_btn").click();
                break;
            case "페이코":
                jQuery("#payco_signin_btn, #payco_start_signin_btn").click();
                break;
            case "애플아이디":
                jQuery("#apple_signin_btn").click();
                break;
            }
        }
    }, 300);

	//BeforeSnsSet();
});

function googleCl() {
	//구글로그인시 클릭코드
    if (isMobileDevice()) {
        var strDomain = "m";
        var strClickCd = "18792";
    } else {
        var strDomain = "edit";
        var strClickCd = "18790";
    }
    goCL(this, strClickCd, strDomain, '간편로그인_구글');
    goAIR('user.signin.try', 'google', '', '');
}
//구글 로그인 (PC/모웹만 해당)
if (!iNcruit.util.IsApp()) {
    window.onload = function() {
        if (jQuery("#google_signin_btn").length > 0) {
            var btnSize = "large";

            var url = document.URL;

            if (url.indexOf("edit.incruit.com/support/searchlogininfo.asp") > -1) {
                btnSize = "medium";
            }

            if (L_SERVER_SET.toLowerCase() == "beta") {
                gappId = "512569068760-2uv23bgl80l8br33mhf4loua74rm7tqk.apps.googleusercontent.com";
            } else if (L_SERVER_SET.toLowerCase() == "semi") {
                gappId = "512569068760-8bmpn3mv54v7msgl6h9josji90gqvpr2.apps.googleusercontent.com";
            } else if (L_SERVER_SET.toLowerCase() == "") {
                gappId = "512569068760-57qtqrnos6c2b5k0ep2tbo7bkip2fce4.apps.googleusercontent.com";
            }

            google.accounts.id.initialize({
                client_id: gappId,
                callback: signInWithGoogle
            });

			google.accounts.id.renderButton(
				document.getElementById('google_signin_btn'),
				{
                type: "icon",
                shape: "circle",
                theme: "outline",
                size: btnSize,
                click_listener: googleCl
        		}
			);

    }

}
}

function makeNoEntrance(site) {

    var strHtml = "";
    if (site == "FaceBook") {
        strSite = "페이스북";
    } else if (site == "Twitter") {
        strSite = "트위터";
    }

    if (isMobileDevice()) {
        strHtml += "<div class=\"alert-logpop\" id=\"modal_loginNew\" style=\"display: block;\">";
        strHtml += " <div class=\"alert-logpop__bg\"></div>";
        strHtml += " <div class=\"alert-logpop__body\">";
        strHtml += "  <div class=\"alert-pop__resumecont\">";
        strHtml += "   <div class=\"alertLayer-head-title\">";
        strHtml += "    <button type=\"button\" class=\"dPosLayer-close\" onclick=\"jQuery('#modal_loginNew').remove();\"><span>닫기</span></button>";
        strHtml += "   </div>";
        strHtml += "   <div class=\"alertLayer-login-txt\">";
        strHtml += "    <p>";
        strHtml += "     " + strSite + " 정책 변경으로 인하여<br>";
        strHtml += "     신규 회원가입이 중단되었습니다.<br>";
        strHtml += "     <br>";
        strHtml += "     다른 로그인 수단을 이용해주세요.";
        strHtml += "    </p>";
        strHtml += "   </div>";
        strHtml += "  </div>";
        strHtml += "  <div class=\"alert-pop__resbutton\">";
        strHtml += "   <button type=\"button\" class=\"button resumeBtn_alert button-orange\" onclick=\"jQuery('#modal_loginNew').remove();\" name=\"\">확인</button>";
        strHtml += "  </div>";
        strHtml += " </div>";
        strHtml += "</div>";
    } else {
        var url = document.URL;

        if (url.indexOf("edit.incruit.com/login/login.asp") > -1) {
            var strStyle = "display: flex;";
        } else {
            var strStyle = "";
        }

        strHtml += "<div id=\"modal_loginNew\" style=\"" + strStyle + "\">";
        strHtml += " <div class=\"c_newPopupLayer endLogin open\">";
        strHtml += "  <div class=\"c_newPopupLayer_container elogin\">";
        strHtml += "   <div class=\"c_newPopupLayer_contents\">";
        strHtml += "    <div class=\"elogin_wrap\">";
        strHtml += "     <div class=\"endLogin_txtwrap\">";
        strHtml += "      <p class=\"endlogin_txt\">";
        strHtml += "       " + strSite + " 정책 변경으로 인하여<br>";
        strHtml += "       신규 회원가입이 중단되었습니다.<br>";
        strHtml += "       <br>";
        strHtml += "       다른 로그인 수단을 이용해주세요.";
        strHtml += "      </p>";
        strHtml += "      <button type=\"button\" class=\"elogin_check\" onclick=\"jQuery('#modal_loginNew').remove();\">확인</button>";
        strHtml += "     </div>";
        strHtml += "    </div>";
        strHtml += "    <button class=\"c_new_btnClose\" type=\"button\" onclick=\"jQuery('#modal_loginNew').remove();\"><span>닫기</span></button>";
        strHtml += "   </div>";
        strHtml += "  </div>";
        strHtml += " </div>";
        strHtml += "</div>";
    }

    jQuery("body").append(strHtml);

}